version: '3.8'

services:
  f_laravel:
    image: image_f_laravel
    container_name: f_laravel
    build:
      context: .
      dockerfile: db.dockerfile
    volumes:
      - .:/app
      - vendor_data:/app/vendor
    env_file:
      - .env
    environment:
      DB_HOST: db
      REDIS_HOST: redis
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "php artisan optimize;
       php artisan octane:start --host=0.0.0.0 --port=8002 --server=frankenphp --workers=2 --max-requests=1000;
       tail -f /dev/null"

  caddy:
    image: caddy:2.7.5-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./public:/app/public
      - caddy_data:/data
    networks:
      - app_network
    depends_on:
      - f_laravel

  db:
    image: mariadb:10.11
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: app3
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7.2-alpine
    container_name: laravel_redis
    restart: unless-stopped
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  vendor_data:
  caddy_data:
  db_data:

networks:
  app_network:
    driver: bridge
